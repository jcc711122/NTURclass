install.packages(e1071)
install.packages("e1071")
library(e1071)
library(e1071)
library(e1071)
index = 1:nrow(AAPL)
index = 1:nrow(AAPL)
AAPL = read.csv('AAPL.csv')
index = 1:nrow(AAPL)
AAPL[,2:5] = log(AAPL[,2:5])
np = ceiling(0.1 * nrow(AAPL))
View(AAPL)
return = AAPL[2:nrow(AAPL), 5] - AAPL[1:(nrow(AAPL)-1), 5]
Y = return / abs(return)
X = AAPL[1:(nrow(AAPL)-1),]
AAPL = read.csv('AAPL.csv')
index = 1:nrow(AAPL)
AAPL[,2:5] = log(AAPL[,2:5])
#取前90趴當成training data
np = ceiling(0.9 * nrow(AAPL))
return = AAPL[2:nrow(AAPL), 5] - AAPL[1:(nrow(AAPL)-1), 5]
Y = return / abs(return)
X = AAPL[1:(nrow(AAPL)-1),]
TrainY = Y[1:np]
TrainX = X[1:np,]
TrainY = Y[1:np,]
TrainX = X[1:np,]
TrainY = Y[1:np]
TrainY = Y[1:np,]
TestY = Y[(np+1):length(Y)]
TestX = X[(np+1):length(Y)]
TestX = X[(np+1):length(Y)]
TestX = X[(np+1):length(X)]
TestX = X[(np+1):length(X),]
TestY = Y[(np+1):length(Y),]
TestY = Y[(np+1):length(Y)]
View(TestX)
View(TrainX)
View(TestX)
View(TrainX)
View(TestX)
View(TrainX)
View(TestX)
View(TrainX)
View(AAPL)
TestY = Y[(np+1):length(Y)]
TestX = X[(np+1):length(Y),]
TestY = Y[(np+1):length(Y)]
TestX = X[(np+1):length(Y),]
TestY = Y[(np+1):length(Y)]
TestX = X[(np+1):length(X),]
View(TestX)
length(X)
np
length(X$AAPL.Open)
TestY = Y[(np+1):length(Y)]
TestX = X[(np+1):length(Y),]
svm.model = svm(TrainY ~., TrainX, kernel='radial', type = 'C-classifed')
svm.pred = predict(svm.model, TestX)
library('e1071')
svm.model = svm(TrainY ~., TrainX, kernel='radial', type = 'C-classifed')
svm.pred = predict(svm.model, TestX)
rm(list=ls(all=TRUE))
library('e1071')
AAPL = read.csv('AAPL.csv')
index = 1:nrow(AAPL)
AAPL[,2:5] = log(AAPL[,2:5])
#取前90趴當成training data
np = ceiling(0.9 * nrow(AAPL))
return = AAPL[2:nrow(AAPL), 5] - AAPL[1:(nrow(AAPL)-1), 5]
Y = return / abs(return)
X = AAPL[1:(nrow(AAPL)-1),]
TrainY = Y[1:np]
TrainX = X[1:np,]
TestY = Y[(np+1):length(Y)]
TestX = X[(np+1):length(Y),]
svm.model = svm(TrainY ~., TrainX, kernel='radial', type = 'C-classifed')
svm.pred = predict(svm.model, TestX)
